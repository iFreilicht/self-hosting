version: '3'

services:
# --- Base services
  proxy:
    image: jwilder/nginx-proxy
    container_name: proxy
    restart: unless-stopped
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:rw
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - ./uploadsize.conf:/etc/nginx/conf.d/uploadsize.conf:ro
    ports:
      - 80:80
      - 443:443
    networks:
      - "default"
      - "proxy-tier"

  proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    restart: unless-stopped
    environment:
      - NGINX_PROXY_CONTAINER=proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # This wasn't in the tutorial, but seems to have fixed the certificate issues
      - certs:/etc/nginx/certs:rw
    volumes_from:
      - "proxy"
    depends_on:
      - "proxy"
    networks:
      - "default"
      - "proxy-tier"

  portainer:
    image: portainer/portainer:1.24.1  # Latest "historic" version of portainer before CE and BE
    container_name: portainer
    restart: always
    environment:
      - VIRTUAL_HOST=docker.uhl.cx
      - LETSENCRYPT_HOST=docker.uhl.cx
      - LETSENCRYPT_EMAIL=letsencrypt@mail.felix-uhl.de
    volumes:
      - ../portainer/:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9000:9000


# --- Nextcloud
  nextcloud:
    build: # Build our modified image
      context: nextcloud
    container_name: nextcloud
    restart: always
    environment:
      - MYSQL_HOST=nextcloud-database
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=${NEXTCLOUD_DATABASE_USER}
      - MYSQL_PASSWORD=${NEXTCLOUD_DATABASE_PASSWORD}
      - VIRTUAL_HOST=cloud.uhl.cx
      - LETSENCRYPT_HOST=cloud.uhl.cx
      - LETSENCRYPT_EMAIL=letsencrypt@mail.felix-uhl.de
    volumes:
      - type: tmpfs
        target: /tmp
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /mnt/nextcloud-storage/nextcloud:/var/www/html
    ports:
      - 8080:80
    links:
      - nextcloud-database

  nextcloud-database:
    image: mariadb:10.3.22 # See https://github.com/nextcloud/docker/issues/1038
    container_name: nextcloud-database
    restart: always
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    environment:
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=${NEXTCLOUD_DATABASE_USER}
      - MYSQL_PASSWORD=${NEXTCLOUD_DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_DATABASE_ROOT_PASSWORD}
    volumes:
      - /mnt/nextcloud-storage/database:/var/lib/mysql
      - nextcloud-run-mysqld:/run/mysqld/

  nextcloud-cron:
    image: rcdailey/nextcloud-cronjob
    container_name: nextcloud-cron
    restart: always
    network_mode: none
    depends_on:
      - nextcloud
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - NEXTCLOUD_CONTAINER_NAME=nextcloud
      - NEXTCLOUD_CRON_MINUTE_INTERVAL=5


# --- Smaller, self-contained services
  snapdrop:
    image: linuxserver/snapdrop
    container_name: snapdrop
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - VIRTUAL_HOST=drop.uhl.cx
      - LETSENCRYPT_HOST=drop.uhl.cx
      - LETSENCRYPT_EMAIL=letsencrypt@mail.felix-uhl.de
    volumes:
      - ../snapdrop:/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 8081:80
      - 4431:443

  transmission:
    image: linuxserver/transmission
    container_name: transmission
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - VIRTUAL_PORT=9091
      - VIRTUAL_HOST=transmission.uhl.cx
      - LETSENCRYPT_HOST=transmission.uhl.cx
      - LETSENCRYPT_EMAIL=letsencrypt@mail.felix-uhl.de
      - USER=${TRANSMISSION_USER}
      - PASS=${TRANSMISSION_PASS}
    volumes:
      - /mnt/nextcloud-storage/config:/config
      - /mnt/nextcloud-storage/downloads:/downloads
      - /mnt/nextcloud-storage/watch:/watch
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp


# --- Backups
  borgmatic:
    build: # Build our modified image
      context: borgmatic
      args:
        - MYSQL_USER=${NEXTCLOUD_DATABASE_USER}
        - MYSQL_PASSWORD=${NEXTCLOUD_DATABASE_PASSWORD}
    container_name: borgmatic
    volumes:
      - /mnt/nextcloud-storage/nextcloud:/mnt/source/nextcloud:ro
      - ./.env:/mnt/source/self-hosting/.env
      - ./borgmatic:/etc/borgmatic.d/
      - /root/.config/borg:/root/.config/borg
      - /root/.ssh:/root/.ssh
      - /root/.cache/borg:/root/.cache/borg
      # For database backup
      - nextcloud-run-mysqld:/run/mysqld/
    environment:
      - TZ=${TZ}
      - BORG_PASSPHRASE=${BORG_PASSPHRASE}



volumes:
  certs:
  vhost.d:
  html:
  nextcloud-run-mysqld:

networks:
  proxy-tier:
